
Author:
    Peter Goodman

How to compile:
    Run the 'make' command. If this fails with issues about the bin and
    bin/data_flow folders not existing, then those folders will need to be
    manually created. Otherwise, the makefile will attempt to automatically
    create them.

Notable/clever things:
    Run 'make clean ; make debug' to generate a DOT graph of the original CFG.
    I updated the dot output to use subgraph clusters in order to debug some
    issues where I had multiple functions and the numbering for the basic blocks
    in the graph were the same.
    
    I created a super nifty optimization framework (optimizer.h, optimizer.cc)
    that manages dependency injection into optimization passes and manages
    cascading relationships between independent optimization passes, allowing
    for declarative specifications of which optimizations should be done when.
    
    I forced every basic block (except entry/exit) to begin with a label, 
    including entry/exit. This is convenient for a number of reasons.
    
    Optimization                        Flag
    ------------                        ----
    Constant folding                    ECE540_DISABLE_CF
    Copy propagation                    ECE540_DISABLE_CP
    Common subexpression elimination    ECE540_DISABLE_CSE
    Deadcode elimination                ECE540_DISABLE_DCE
    Loop-invariant code motion          ECE540_DISABLE_LICM
    Abstract interpretation             ECE540_DISABLE_EVAL

    
